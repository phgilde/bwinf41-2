Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 117091 (-117020) rows, 2485 (0) columns and 239010 (-234040) elements
Clp0030I 27 infeas 28.916164, obj 862.38461 - mu 0.1522939, its 105, 88 interior
Clp0030I 39 infeas 0.38560613, obj 1330.6491 - mu 0.0018794197, its 105, 214 interior
Clp0030I 50 infeas 0.0091130956, obj 1332.1542 - mu 2.3193432e-05, its 105, 407 interior
Clp1000I sum of infeasibilities 6.92466e-05 - average 5.91391e-10, 2044 fixed columns
Coin0506I Presolve 3517 (-113574) rows, 441 (-2044) columns and 7774 (-231236) elements
Clp0006I 0  Obj 1332.1061 Primal inf 2.1153985e-05 (22) Dual inf 2.39e+10 (433)
Clp0029I End of values pass after 441 iterations
Clp0014I Perturbing problem by 0.001% of 1 - largest nonzero change 2.9702926e-05 ( 0.0014851463%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 1325.5113
Clp0000I Optimal - objective value 1325.5113
Coin0511I After Postsolve, objective 1325.5113, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 1325.5113 Dual inf 3.034274 (1)
Clp0014I Perturbing problem by 0.001% of 1 - largest nonzero change 2.9990566e-05 ( 0.0014995283%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 1325.5113
Clp0000I Optimal - objective value 1325.5113
Clp0000I Optimal - objective value 1325.5113
Coin0511I After Postsolve, objective 1325.5113, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1325.511331 - 0 iterations time 3.242, Presolve 0.24, Idiot 2.98

Starting MIP optimization
Cbc0045I MIPStart provided solution with cost 1505.98
Cbc0012I Integer solution of 1505.9791 found by Reduced search after 0 iterations and 0 nodes (0.56 seconds)
Cbc0013I At root node, 0 cuts changed objective from 1325.5113 to 1325.5113 in 1 passes
Cbc0014I Cut generator 0 (LazyConstraints) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0010I After 2 nodes, 3 on tree, 1505.9791 best solution, best possible 1325.5113 (2.43 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1505.9791 best solution, best possible 1325.5113 (3.60 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1505.9791 best solution, best possible 1325.5113 (4.73 seconds)
Cbc0010I After 8 nodes, 8 on tree, 1505.9791 best solution, best possible 1325.5113 (5.74 seconds)
Cbc0010I After 10 nodes, 10 on tree, 1505.9791 best solution, best possible 1325.5113 (6.44 seconds)
Cbc0010I After 13 nodes, 12 on tree, 1505.9791 best solution, best possible 1325.5113 (7.29 seconds)
Cbc0010I After 17 nodes, 14 on tree, 1505.9791 best solution, best possible 1325.5113 (8.16 seconds)
Cbc0010I After 21 nodes, 16 on tree, 1505.9791 best solution, best possible 1325.5113 (8.93 seconds)
Cbc0010I After 25 nodes, 17 on tree, 1505.9791 best solution, best possible 1325.5113 (9.83 seconds)
Cbc0010I After 30 nodes, 17 on tree, 1505.9791 best solution, best possible 1325.5113 (10.58 seconds)
Cbc0010I After 35 nodes, 18 on tree, 1505.9791 best solution, best possible 1325.5113 (11.40 seconds)
Cbc0010I After 42 nodes, 16 on tree, 1505.9791 best solution, best possible 1325.5113 (12.17 seconds)
Cbc0010I After 48 nodes, 19 on tree, 1505.9791 best solution, best possible 1325.5113 (12.89 seconds)
Cbc0038I Full problem 234111 rows 2485 columns, reduced to 84815 rows 2163 columns
Cbc0044I Reduced cost fixing - 84815 rows, 2163 columns - restarting search
Cbc0012I Integer solution of 1505.9791 found by Previous solution after 0 iterations and 0 nodes (20.22 seconds)
Cbc0031I 45 added rows had average density of 42.311111
Cbc0013I At root node, 45 cuts changed objective from 1325.5113 to 1396.43 in 4 passes
Cbc0014I Cut generator 0 (LazyConstraints) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Probing) - 109 row cuts average 3.0 elements, 5 column cuts (5 active)  in 0.468 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Gomory) - 12 row cuts average 579.7 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 25 row cuts average 180.5 elements, 0 column cuts (0 active)  in 0.215 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 3 row cuts average 4.3 elements, 0 column cuts (0 active)  in 18.587 seconds - new frequency is -100
Cbc0014I Cut generator 8 (Clique) - 47 row cuts average 17.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1505.9791 best solution, best possible 1396.43 (40.22 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1505.9791 best solution, best possible 1396.43 (41.26 seconds)
Cbc0010I After 9 nodes, 9 on tree, 1505.9791 best solution, best possible 1396.43 (42.37 seconds)
Cbc0010I After 15 nodes, 12 on tree, 1505.9791 best solution, best possible 1396.43 (43.44 seconds)
Cbc0010I After 22 nodes, 15 on tree, 1505.9791 best solution, best possible 1396.43 (44.46 seconds)
Cbc0016I Integer solution of 1504.6342 found by strong branching after 1618 iterations and 27 nodes (44.99 seconds)
Cbc0010I After 32 nodes, 19 on tree, 1504.6342 best solution, best possible 1396.43 (45.53 seconds)
Cbc0010I After 43 nodes, 26 on tree, 1504.6342 best solution, best possible 1396.43 (46.54 seconds)
Cbc0010I After 58 nodes, 32 on tree, 1504.6342 best solution, best possible 1396.43 (47.58 seconds)
Cbc0010I After 72 nodes, 38 on tree, 1504.6342 best solution, best possible 1396.43 (48.59 seconds)
Cbc0016I Integer solution of 1468.8226 found by strong branching after 3479 iterations and 76 nodes (48.87 seconds)
Cbc0010I After 87 nodes, 28 on tree, 1468.8226 best solution, best possible 1396.43 (49.62 seconds)
Cbc0010I After 106 nodes, 33 on tree, 1468.8226 best solution, best possible 1396.43 (50.64 seconds)
Cbc0010I After 130 nodes, 33 on tree, 1468.8226 best solution, best possible 1396.43 (51.65 seconds)
Cbc0010I After 156 nodes, 35 on tree, 1468.8226 best solution, best possible 1396.43 (52.71 seconds)
Cbc0010I After 182 nodes, 32 on tree, 1468.8226 best solution, best possible 1396.43 (53.73 seconds)
Cbc0010I After 199 nodes, 37 on tree, 1468.8226 best solution, best possible 1396.43 (54.75 seconds)
Cbc0010I After 221 nodes, 39 on tree, 1468.8226 best solution, best possible 1396.43 (55.85 seconds)
Cbc0004I Integer solution of 1466.8375 found after 8531 iterations and 224 nodes (56.04 seconds)
Cbc0004I Integer solution of 1459.7404 found after 9018 iterations and 240 nodes (56.77 seconds)
Cbc0010I After 243 nodes, 30 on tree, 1459.7404 best solution, best possible 1396.43 (56.88 seconds)
Cbc0004I Integer solution of 1458.5648 found after 9385 iterations and 255 nodes (57.50 seconds)
Cbc0010I After 265 nodes, 28 on tree, 1458.5648 best solution, best possible 1396.43 (57.89 seconds)
Cbc0010I After 291 nodes, 28 on tree, 1458.5648 best solution, best possible 1396.43 (58.90 seconds)
Cbc0010I After 317 nodes, 33 on tree, 1458.5648 best solution, best possible 1396.43 (59.92 seconds)
Cbc0010I After 345 nodes, 31 on tree, 1458.5648 best solution, best possible 1396.43 (60.95 seconds)
Cbc0010I After 368 nodes, 32 on tree, 1458.5648 best solution, best possible 1396.43 (61.99 seconds)
Cbc0004I Integer solution of 1452.6866 found after 12673 iterations and 372 nodes (62.23 seconds)
Cbc0010I After 392 nodes, 21 on tree, 1452.6866 best solution, best possible 1396.43 (63.04 seconds)
Cbc0010I After 416 nodes, 24 on tree, 1452.6866 best solution, best possible 1396.43 (64.13 seconds)
Cbc0004I Integer solution of 1447.7752 found after 14222 iterations and 424 nodes (64.46 seconds)
Cbc0010I After 441 nodes, 21 on tree, 1447.7752 best solution, best possible 1396.43 (65.13 seconds)
Cbc0010I After 467 nodes, 18 on tree, 1447.7752 best solution, best possible 1396.43 (66.17 seconds)
Cbc0010I After 494 nodes, 15 on tree, 1447.7752 best solution, best possible 1396.43 (67.21 seconds)
Cbc0004I Integer solution of 1447.4563 found after 16450 iterations and 504 nodes (67.82 seconds)
Cbc0004I Integer solution of 1445.9728 found after 16677 iterations and 512 nodes (68.24 seconds)
Cbc0010I After 512 nodes, 12 on tree, 1445.9728 best solution, best possible 1396.43 (68.24 seconds)
Cbc0010I After 535 nodes, 8 on tree, 1445.9728 best solution, best possible 1396.43 (69.24 seconds)
Cbc0010Modell wird erstellt...
Suche Startlösung...
None
Suche optimale Lösung...
OptimizationStatus.INFEASIBLE
C:\Users\Philip\Documents\programmieren\python\bwinf41-2\weniger-krumme-touren\beispiele\random\70\703.txt
Startlösung ist optimal!
I After 557 nodes, 7 on tree, 1445.9728 best solution, best possible 1396.43 (70.25 seconds)
Cbc0010I After 580 nodes, 8 on tree, 1445.9728 best solution, best possible 1396.43 (71.26 seconds)
Cbc0010I After 607 nodes, 8 on tree, 1445.9728 best solution, best possible 1396.43 (72.35 seconds)
Cbc0010I After 626 nodes, 5 on tree, 1445.9728 best solution, best possible 1396.43 (73.37 seconds)
Cbc0010I After 651 nodes, 10 on tree, 1445.9728 best solution, best possible 1396.43 (74.38 seconds)
Cbc0010I After 669 nodes, 7 on tree, 1445.9728 best solution, best possible 1396.43 (75.40 seconds)
Cbc0010I After 691 nodes, 5 on tree, 1445.9728 best solution, best possible 1396.43 (76.41 seconds)
Cbc0010I After 712 nodes, 3 on tree, 1445.9728 best solution, best possible 1396.43 (77.50 seconds)
Cbc0010I After 726 nodes, 7 on tree, 1445.9728 best solution, best possible 1396.43 (78.54 seconds)
Cbc0010I After 745 nodes, 4 on tree, 1445.9728 best solution, best possible 1396.43 (79.57 seconds)
Cbc0010I After 760 nodes, 1 on tree, 1445.9728 best solution, best possible 1404.9292 (80.68 seconds)
Cbc0010I After 776 nodes, 10 on tree, 1445.9728 best solution, best possible 1404.9292 (81.69 seconds)
Cbc0010I After 800 nodes, 5 on tree, 1445.9728 best solution, best possible 1404.9292 (82.70 seconds)
Cbc0010I After 823 nodes, 6 on tree, 1445.9728 best solution, best possible 1404.9292 (83.74 seconds)
Cbc0010I After 839 nodes, 4 on tree, 1445.9728 best solution, best possible 1404.9292 (84.74 seconds)
Cbc0016I Integer solution of 1437.669 found by strong branching after 26975 iterations and 856 nodes (85.44 seconds)
Cbc0010I After 861 nodes, 1 on tree, 1437.669 best solution, best possible 1404.9292 (85.87 seconds)
Cbc0001I Search completed - best objective 1437.669047593072, took 27536 iterations and 866 nodes (86.28 seconds)
Cbc0032I Strong branching done 1860 times (27782 iterations), fathomed 23 nodes and fixed 33 variables
Cbc0035I Maximum depth 25, 43413 variables fixed on reduced cost
Cbc0038I LazyConstraints was tried 551 times and created 0 cuts of which 0 were active after adding rounds of cuts (5.942 seconds)
Cbc0038I Probing was tried 139 times and created 1257 cuts of which 0 were active after adding rounds of cuts (1.035 seconds)
Cbc0038I Gomory was tried 4 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.071 seconds)
Cbc0038I Knapsack was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.076 seconds)
Cbc0038I MixedIntegerRounding2 was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.104 seconds)
Cbc0038I FlowCover was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Cbc0038I TwoMirCuts was tried 127 times and created 28 cuts of which 0 were active after adding rounds of cuts (3.036 seconds)
Cbc0038I ZeroHalf was tried 4 times and created 3 cuts of which 0 were active after adding rounds of cuts (18.587 seconds)
Cbc0038I Clique was tried 4 times and created 47 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Cbc0001I Search completed - best objective 1505.979071217328, took 31992 iterations and 916 nodes (86.93 seconds)
Cbc0032I Strong branching done 802 times (14649 iterations), fathomed 11 nodes and fixed 22 variables
Cbc0035I Maximum depth 19, 10321 variables fixed on reduced cost
Total time (CPU seconds):       87.43   (Wallclock seconds):       87.43

